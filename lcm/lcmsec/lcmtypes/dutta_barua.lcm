//Lcmtypes used to facilitate dutta barua authenticated group key exchange

struct Dutta_Barua_message
{
    int32_t u;

    //either one or two
    int8_t round;

    //public value to the chosen secret (X in round1, Y in round 2)
    int32_t public_value_size;
    byte public_value [public_value_size]; 

    int32_t d;

    int32_t sig_size;
    byte sig [sig_size];
}

struct Dutta_Barua_cert {
    int32_t cert_size;
    byte x509_certificate_BER[cert_size];
}

struct Dutta_Barua_JOIN
{
    const int32_t att_randomness_bytes=32;
    byte attestation_challenge[att_randomness_bytes];

    int64_t timestamp_r1start_us;
    Dutta_Barua_cert certificate;

    int32_t sig_size;
    byte sig [sig_size];
}

struct Dutta_Barua_JOIN_response 
{
    const int32_t att_randomness_bytes=32;
    byte att_randomlocal[att_randomness_bytes];

    byte att_challenge[att_randomness_bytes];

    int32_t n_observed_challenges;
    byte att_observed_challenges[n_observed_challenges][att_randomness_bytes];

    int64_t timestamp_r1start_us;

    int32_t participants;
    Dutta_Barua_cert certificates_participants[participants];

    int32_t joining;
    Dutta_Barua_cert certificates_joining[joining];

    //certificate of sender, not included in certificates_joining or certificates_participants
    //used to sign signature
    Dutta_Barua_cert self;

    //Role of sender
    const int32_t ROLE_JOINING=1, ROLE_PARTICIPANT=2;
    int32_t role;

    int32_t sig_size;
    byte sig [sig_size];
}

struct Attestation_Evidence {
    int32_t quote_size;
    byte quote[quote_size];

    int32_t sig_size;
    byte quote_signature [sig_size];

    //Certificate
    int32_t cert_size;
    byte cert[cert_size];
}
